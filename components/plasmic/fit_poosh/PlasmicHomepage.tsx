// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: gEDnAkutJxpj72EWzRAHSD
// Component: 1BOjDDqTx3n0

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import Header from "../../Header"; // plasmic-import: K1YTnPhaTLTK/component
import Button from "../../Button"; // plasmic-import: 6MnfNJVvTAWL/component
import TextInput from "../../TextInput"; // plasmic-import: idu9Mj8HNthX/component

import { useScreenVariants as useScreenVariantszmu7Agtju1Hx } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: Zmu7Agtju1Hx/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic.module.css"; // plasmic-import: gEDnAkutJxpj72EWzRAHSD/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: 1BOjDDqTx3n0/css

import ChecksvgIcon from "./icons/PlasmicIcon__Checksvg"; // plasmic-import: syr8Iyb9Vv7f/icon
import Icon3Icon from "./icons/PlasmicIcon__Icon3"; // plasmic-import: 26U81VLiynhs/icon
import Icon2Icon from "./icons/PlasmicIcon__Icon2"; // plasmic-import: d6lRgkADHPon/icon
import Icon28Icon from "./icons/PlasmicIcon__Icon28"; // plasmic-import: UDVt1_teZ5L8/icon
import IconIcon from "./icons/PlasmicIcon__Icon"; // plasmic-import: 34EZUZ-LpeBk/icon
import Searchsvg2Icon from "./icons/PlasmicIcon__Searchsvg2"; // plasmic-import: c4av0FQK4p3h/icon

createPlasmicElementProxy;

export type PlasmicHomepage__VariantMembers = {};
export type PlasmicHomepage__VariantsArgs = {};
type VariantPropType = keyof PlasmicHomepage__VariantsArgs;
export const PlasmicHomepage__VariantProps = new Array<VariantPropType>();

export type PlasmicHomepage__ArgsType = {};
type ArgPropType = keyof PlasmicHomepage__ArgsType;
export const PlasmicHomepage__ArgProps = new Array<ArgPropType>();

export type PlasmicHomepage__OverridesType = {
  root?: Flex__<"div">;
  nav?: Flex__<"nav">;
  header?: Flex__<typeof Header>;
  h1?: Flex__<"h1">;
  textInput3?: Flex__<typeof TextInput>;
};

export interface DefaultHomepageProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicHomepage__RenderFunc(props: {
  variants: PlasmicHomepage__VariantsArgs;
  args: PlasmicHomepage__ArgsType;
  overrides: PlasmicHomepage__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const stateSpecs: Parameters<typeof useDollarState>[0] = React.useMemo(
    () => [
      {
        path: "textInput3.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      }
    ],
    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs
  });

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantszmu7Agtju1Hx()
  });

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <Stack__
          as={"div"}
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          hasGap={true}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <nav
            data-plasmic-name={"nav"}
            data-plasmic-override={overrides.nav}
            className={classNames(projectcss.all, sty.nav)}
          >
            <Header
              data-plasmic-name={"header"}
              data-plasmic-override={overrides.header}
              className={classNames("__wab_instance", sty.header)}
            />
          </nav>
          <section className={classNames(projectcss.all, sty.section__c62Sq)}>
            <div className={classNames(projectcss.all, sty.freeBox__ktI4G)}>
              <div className={classNames(projectcss.all, sty.columns__jaNcR)}>
                <div className={classNames(projectcss.all, sty.column__diWyC)}>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__sj8FO)}
                  >
                    <h1
                      data-plasmic-name={"h1"}
                      data-plasmic-override={overrides.h1}
                      className={classNames(
                        projectcss.all,
                        projectcss.h1,
                        projectcss.__wab_text,
                        sty.h1
                      )}
                    >
                      {"\u0641\u06cc\u062a \u067e\u0648\u0634"}
                    </h1>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__vOy4J
                      )}
                    >
                      {hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "Sed ut perspiciatis unde omnis iste natus error sit voluptatem"
                        : "\u067e\u0644\u062a\u0641\u0631\u0645 \u062c\u0627\u0645\u0639 \u062e\u0631\u06cc\u062f \u0648 \u0627\u0646\u062f\u0627\u0632\u0647\u200c\u06af\u06cc\u0631\u06cc \u0622\u0646\u0644\u0627\u06cc\u0646 \u067e\u0648\u0634\u0627\u06a9\u060c \u0628\u0627 \u06a9\u0645\u06a9 \u0647\u0648\u0634 \u0645\u0635\u0646\u0648\u0639\u06cc."}
                    </div>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__c0Ox0)}
                    >
                      <Button
                        className={classNames(
                          "__wab_instance",
                          sty.button__kPfDg
                        )}
                        color={"softSand"}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__bo1Kk
                          )}
                        >
                          {
                            "\u0641\u0631\u0648\u0634\u0646\u062f\u0647\u200c\u0627\u0645"
                          }
                        </div>
                      </Button>
                      <Button
                        className={classNames(
                          "__wab_instance",
                          sty.button__ap2Q
                        )}
                        color={"green"}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__fWPeb
                          )}
                        >
                          {
                            "\u0645\u0634\u062a\u0631\u06cc \u0647\u0633\u062a\u0645"
                          }
                        </div>
                      </Button>
                    </Stack__>
                  </Stack__>
                </div>
              </div>
            </div>
          </section>
          <section className={classNames(projectcss.all, sty.section__b0Rmw)}>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__qEiL1)}
            >
              <h2
                className={classNames(
                  projectcss.all,
                  projectcss.h2,
                  projectcss.__wab_text,
                  sty.h2__jVjz
                )}
              >
                {
                  "\u062e\u0631\u06cc\u062f \u0622\u0646\u0644\u0627\u06cc\u0646 \u0644\u0628\u0627\u0633"
                }
              </h2>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__f99E
                )}
              >
                {
                  "\u062f\u06cc\u06af\u0647 \u0628\u0647 \u062e\u06cc\u0627\u0637 \u0648 \u0627\u0646\u062f\u0627\u0632\u0647\u200c\u06af\u06cc\u0631\u06cc \u062f\u0633\u062a\u06cc \u0646\u06cc\u0627\u0632\u06cc \u0646\u06cc\u0633\u062a!\n\u0628\u0627 \u06cc\u06a9 \u0639\u06a9\u0633 \u0645\u06cc\u200c\u062a\u0648\u0646\u06cc \u0627\u0646\u062f\u0627\u0632\u0647 \u0644\u0628\u0627\u0633 \u0645\u062f\u0646\u0638\u0631\u062a \u0631\u0648 \u0628\u0627 \u0644\u0628\u0627\u0633 \u062a\u0646\u062a \u0645\u0642\u0627\u06cc\u0633\u0647 \u06a9\u0646\u06cc!"
                }
              </div>
            </Stack__>
          </section>
          <section className={classNames(projectcss.all, sty.section__yHms)}>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__oHAiN)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns__aieL)}
              >
                <div className={classNames(projectcss.all, sty.column__oeinj)}>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__hvF7)}
                    displayHeight={"100%"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/fit_poosh/images/fp2Jpg.jpg",
                      fullWidth: 1905,
                      fullHeight: 1429,
                      aspectRatio: undefined
                    }}
                  />
                </div>
                <div className={classNames(projectcss.all, sty.column__er3R4)}>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox___84NZa)}
                  >
                    <h2
                      className={classNames(
                        projectcss.all,
                        projectcss.h2,
                        projectcss.__wab_text,
                        sty.h2__z6K5K
                      )}
                    >
                      {
                        "\u06a9\u0627\u0631\u06a9\u0631\u062f\u0634 \u0686\u0637\u0648\u0631\u06cc\u0647\u061f"
                      }
                    </h2>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__xauWn
                      )}
                    >
                      {
                        "\u0628\u0647 \u0633\u0627\u062f\u06af\u06cc \u06cc\u06a9 \u0639\u06a9\u0633. \u06a9\u0627\u0641\u06cc\u0647 \u0644\u0628\u0627\u0633\u06cc \u06a9\u0647 \u0627\u0646\u062f\u0627\u0632\u0647\u200c\u0627\u062a \u0647\u0633\u062a \u0631\u0648 \u0631\u0648\u06cc \u0632\u0645\u06cc\u0646 \u067e\u0647\u0646 \u06a9\u0646\u06cc \u0648 \u06a9\u0646\u0627\u0631\u0634 \u06a9\u0627\u0631\u062a \u0628\u0627\u0646\u06a9\u06cc\u062a \u0631\u0648 \u0628\u0632\u0627\u0631\u06cc\u060c \u062d\u0627\u0644\u0627 \u06cc\u06a9 \u0639\u06a9\u0633 \u0627\u0632\u0634 \u0628\u06af\u06cc\u0631 \u0648 \u0628\u0631\u0627\u0645\u0648\u0646 \u0628\u0641\u0631\u0633\u062a \u062a\u0627 \u0628\u0627 \u0633\u0627\u06cc\u0632 \u0644\u0628\u0627\u0633 \u0645\u062f\u0646\u0638\u0631\u062a \u0627\u0646\u0637\u0628\u0627\u0642\u0634 \u0628\u062f\u06cc\u0645 \u0648 \u0628\u0647\u062a \u0628\u06af\u06cc\u0645 \u0627\u0646\u062f\u0627\u0632\u062a \u0647\u0633\u062a \u06cc\u0627 \u0646\u0647."
                      }
                    </div>
                  </Stack__>
                </div>
              </Stack__>
            </Stack__>
          </section>
          <section className={classNames(projectcss.all, sty.section__dT)}>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__zdRhz)}
            >
              <PlasmicImg__
                alt={""}
                className={classNames(sty.img__cqr3Q)}
                displayHeight={"auto"}
                displayMaxHeight={"none"}
                displayMaxWidth={"100%"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"auto"}
                loading={"lazy"}
                src={{
                  src: "/plasmic/fit_poosh/images/martenBjork6DW3XyQvcYeUnsplashjpg.jpg",
                  fullWidth: 4096,
                  fullHeight: 2730,
                  aspectRatio: undefined
                }}
              />

              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__g3CbL)}
              >
                <h2
                  className={classNames(
                    projectcss.all,
                    projectcss.h2,
                    projectcss.__wab_text,
                    sty.h2___6FOvj
                  )}
                >
                  {
                    "\u0641\u0631\u0648\u0634\u0646\u062f\u0647\u200c\u0627\u06cc\u061f"
                  }
                </h2>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__qYwaf
                  )}
                >
                  {
                    "\u06a9\u0627\u0641\u06cc\u0647 \u06cc\u06a9\u0628\u0627\u0631 \u0633\u0627\u06cc\u0632 \u0644\u0628\u0627\u0633\u200c\u0647\u0627\u062a\u0648 \u0648\u0627\u0631\u062f \u06a9\u0646\u06cc \u0648 \u0627\u0632 \u0627\u0648\u0646 \u0628\u0647 \u0628\u0639\u062f \u0628\u0627 \u062e\u06cc\u0627\u0644 \u0631\u0627\u062d\u062a \u0644\u0628\u0627\u0633\u200c\u0647\u0627\u062a\u0648 \u0628\u0641\u0631\u0648\u0634\u06cc.\n\u0645\u0627 \u0627\u0648\u0645\u062f\u06cc\u0645 \u062a\u0627 \u0645\u0639\u0636\u0644 \u0645\u0631\u062c\u0648\u0639\u06cc \u06a9\u0627\u0644\u0627 \u0648 \u0646\u0627\u0631\u0636\u0627\u06cc\u062a\u06cc \u0645\u0634\u062a\u0631\u06cc \u0628\u062e\u0627\u0637\u0631 \u0627\u0646\u062f\u0627\u0632\u0647 \u0646\u0628\u0648\u062f\u0646 \u0644\u0628\u0627\u0633 \u0631\u0648 \u06cc\u06a9\u0628\u0627\u0631 \u0628\u0631\u0627\u06cc \u0647\u0645\u06cc\u0634\u0647 \u062d\u0644 \u06a9\u0646\u06cc\u0645."
                  }
                </div>
                <Button
                  className={classNames("__wab_instance", sty.button__btKjQ)}
                  color={"sand"}
                  size={"compact"}
                  submitsForm={true}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__jr8HD
                    )}
                  >
                    {
                      "\u0641\u0631\u0648\u0634\u0646\u062f\u0647\u200c\u0627\u0645"
                    }
                  </div>
                </Button>
              </Stack__>
            </Stack__>
          </section>
          <section className={classNames(projectcss.all, sty.section__xO8Yr)}>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__nw7Sg)}
            >
              <h2
                className={classNames(
                  projectcss.all,
                  projectcss.h2,
                  projectcss.__wab_text,
                  sty.h2__xacpr
                )}
              >
                {hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "Get In Touch"
                  : "\u0633\u0648\u0627\u0644\u06cc \u062f\u0627\u0631\u06cc\u061f"}
              </h2>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__eixvz
                )}
              >
                {
                  "\u0628\u0627 \u0634\u0645\u0627\u0631\u0647 \u0632\u06cc\u0631 \u062a\u0645\u0627\u0633 \u0628\u06af\u06cc\u0631"
                }
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__uvNWi
                )}
              >
                {
                  "\u06f0\u06f9\u06f1\u06f3\u06f6\u06f0\u06f8\u06f1\u06f1\u06f0\u06f6"
                }
              </div>
            </Stack__>
          </section>
          <Stack__
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__rx0Ju)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__qbvaq)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__fl9HW)}
              >
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__tylpC)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__o7NM
                    )}
                  >
                    {
                      "Lorem Ipsum Dolor Sit Amet, Consectetur Adipiscing Lorem Ipsum Dolor Sit Amet, Consectetur ."
                    }
                  </div>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__ioMm)}
                  >
                    <PlasmicLink__
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.link__v0Wto
                      )}
                      component={Link}
                      href={"#"}
                      platform={"nextjs"}
                      target={"_blank"}
                    >
                      <Icon3Icon
                        className={classNames(projectcss.all, sty.svg__zqVfD)}
                        role={"img"}
                      />
                    </PlasmicLink__>
                    <PlasmicLink__
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.link__farMz
                      )}
                      component={Link}
                      href={"#"}
                      platform={"nextjs"}
                      target={"_blank"}
                    >
                      <Icon2Icon
                        className={classNames(projectcss.all, sty.svg__kIiRx)}
                        role={"img"}
                      />
                    </PlasmicLink__>
                    <PlasmicLink__
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.link___1RJZ
                      )}
                      component={Link}
                      href={"#"}
                      platform={"nextjs"}
                      target={"_blank"}
                    >
                      <Icon28Icon
                        className={classNames(projectcss.all, sty.svg__pnNCs)}
                        role={"img"}
                      />
                    </PlasmicLink__>
                  </Stack__>
                </Stack__>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__ke7Nr)}
              >
                <h3
                  className={classNames(
                    projectcss.all,
                    projectcss.h3,
                    projectcss.__wab_text,
                    sty.h3___7A846
                  )}
                >
                  {"SUPPORT"}
                </h3>
                <Stack__
                  as={PlasmicLink__}
                  hasGap={true}
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link___3Ppsk
                  )}
                  component={Link}
                  platform={"nextjs"}
                >
                  {false ? (
                    <IconIcon
                      className={classNames(projectcss.all, sty.svg__fvtfX)}
                      role={"img"}
                    />
                  ) : null}
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___3OGL
                    )}
                  >
                    {"FAQ"}
                  </div>
                  {false ? (
                    <IconIcon
                      className={classNames(projectcss.all, sty.svg__gBbiL)}
                      role={"img"}
                    />
                  ) : null}
                </Stack__>
                <Stack__
                  as={PlasmicLink__}
                  hasGap={true}
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link__cHbK7
                  )}
                  component={Link}
                  platform={"nextjs"}
                >
                  {false ? (
                    <IconIcon
                      className={classNames(projectcss.all, sty.svg___2Ljxn)}
                      role={"img"}
                    />
                  ) : null}
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__onlMc
                    )}
                  >
                    {"Shipping"}
                  </div>
                  {false ? (
                    <IconIcon
                      className={classNames(projectcss.all, sty.svg__ujNyh)}
                      role={"img"}
                    />
                  ) : null}
                </Stack__>
                <Stack__
                  as={PlasmicLink__}
                  hasGap={true}
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link__uK38M
                  )}
                  component={Link}
                  platform={"nextjs"}
                >
                  {false ? (
                    <IconIcon
                      className={classNames(projectcss.all, sty.svg__g62P)}
                      role={"img"}
                    />
                  ) : null}
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__peP4U
                    )}
                  >
                    {"Returns + Exchanges"}
                  </div>
                  {false ? (
                    <IconIcon
                      className={classNames(projectcss.all, sty.svg__rutOq)}
                      role={"img"}
                    />
                  ) : null}
                </Stack__>
                <Stack__
                  as={PlasmicLink__}
                  hasGap={true}
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link__lOl1L
                  )}
                  component={Link}
                  platform={"nextjs"}
                >
                  {false ? (
                    <IconIcon
                      className={classNames(projectcss.all, sty.svg__xqTnr)}
                      role={"img"}
                    />
                  ) : null}
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__iarll
                    )}
                  >
                    {"Contact Us"}
                  </div>
                  {false ? (
                    <IconIcon
                      className={classNames(projectcss.all, sty.svg__hvs9P)}
                      role={"img"}
                    />
                  ) : null}
                </Stack__>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__qwsuu)}
              >
                <h3
                  className={classNames(
                    projectcss.all,
                    projectcss.h3,
                    projectcss.__wab_text,
                    sty.h3__bwnC0
                  )}
                >
                  {"COMPANY"}
                </h3>
                <Stack__
                  as={PlasmicLink__}
                  hasGap={true}
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link__frLwl
                  )}
                  component={Link}
                  platform={"nextjs"}
                >
                  {false ? (
                    <IconIcon
                      className={classNames(projectcss.all, sty.svg__pSNdU)}
                      role={"img"}
                    />
                  ) : null}
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__iglNk
                    )}
                  >
                    {"Our Mission"}
                  </div>
                  {false ? (
                    <IconIcon
                      className={classNames(projectcss.all, sty.svg__yDdO)}
                      role={"img"}
                    />
                  ) : null}
                </Stack__>
                <Stack__
                  as={PlasmicLink__}
                  hasGap={true}
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link___6TT3A
                  )}
                  component={Link}
                  platform={"nextjs"}
                >
                  {false ? (
                    <IconIcon
                      className={classNames(projectcss.all, sty.svg___8TOa)}
                      role={"img"}
                    />
                  ) : null}
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__oQlmv
                    )}
                  >
                    {"Sustainability"}
                  </div>
                  {false ? (
                    <IconIcon
                      className={classNames(projectcss.all, sty.svg___7K2Ru)}
                      role={"img"}
                    />
                  ) : null}
                </Stack__>
                <Stack__
                  as={PlasmicLink__}
                  hasGap={true}
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link__yp5Ho
                  )}
                  component={Link}
                  platform={"nextjs"}
                >
                  {false ? (
                    <IconIcon
                      className={classNames(projectcss.all, sty.svg__nUfrL)}
                      role={"img"}
                    />
                  ) : null}
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__hGi8T
                    )}
                  >
                    {"Stores"}
                  </div>
                  {false ? (
                    <IconIcon
                      className={classNames(projectcss.all, sty.svg__n78G7)}
                      role={"img"}
                    />
                  ) : null}
                </Stack__>
                <Stack__
                  as={PlasmicLink__}
                  hasGap={true}
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link__hfORz
                  )}
                  component={Link}
                  platform={"nextjs"}
                >
                  {false ? (
                    <IconIcon
                      className={classNames(projectcss.all, sty.svg__uvoj3)}
                      role={"img"}
                    />
                  ) : null}
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__hMbVz
                    )}
                  >
                    {"Careers"}
                  </div>
                  {false ? (
                    <IconIcon
                      className={classNames(projectcss.all, sty.svg___5WtdA)}
                      role={"img"}
                    />
                  ) : null}
                </Stack__>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__haoQj)}
              >
                <h3
                  className={classNames(
                    projectcss.all,
                    projectcss.h3,
                    projectcss.__wab_text,
                    sty.h3__z5DFg
                  )}
                >
                  {"Newsletter"}
                </h3>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__jjpjn
                  )}
                >
                  {"Lorem ipsum dolor sit amet, "}
                </div>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__b5Pio)}
                >
                  <TextInput
                    data-plasmic-name={"textInput3"}
                    data-plasmic-override={overrides.textInput3}
                    className={classNames("__wab_instance", sty.textInput3)}
                    onChange={(...eventArgs) => {
                      generateStateOnChangeProp($state, [
                        "textInput3",
                        "value"
                      ])((e => e.target?.value).apply(null, eventArgs));
                    }}
                    placeholder={"Enter email  address"}
                    value={
                      generateStateValueProp($state, ["textInput3", "value"]) ??
                      ""
                    }
                  />

                  <Button
                    className={classNames("__wab_instance", sty.button__uuTr0)}
                    color={"sand"}
                    size={"compact"}
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__ipO1V
                      )}
                    >
                      {"SUbscribe"}
                    </div>
                  </Button>
                </Stack__>
              </Stack__>
            </Stack__>
            <div className={classNames(projectcss.all, sty.freeBox__jMfuR)}>
              <div className={classNames(projectcss.all, sty.freeBox__v3V4C)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__jjdmI
                  )}
                >
                  {
                    "\u00a9 Company. All rights reserved. This site proudly built with  "
                  }
                </div>
                <PlasmicLink__
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    projectcss.__wab_text,
                    sty.link__jywbv
                  )}
                  component={Link}
                  href={"https://www.plasmic.app"}
                  platform={"nextjs"}
                  target={"_blank"}
                >
                  {"Plasmic"}
                </PlasmicLink__>
              </div>
            </div>
          </Stack__>
        </Stack__>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: ["root", "nav", "header", "h1", "textInput3"],
  nav: ["nav", "header"],
  header: ["header"],
  h1: ["h1"],
  textInput3: ["textInput3"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  nav: "nav";
  header: typeof Header;
  h1: "h1";
  textInput3: typeof TextInput;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHomepage__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHomepage__VariantsArgs;
    args?: PlasmicHomepage__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHomepage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicHomepage__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicHomepage__ArgProps,
          internalVariantPropNames: PlasmicHomepage__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    nav: makeNodeComponent("nav"),
    header: makeNodeComponent("header"),
    h1: makeNodeComponent("h1"),
    textInput3: makeNodeComponent("textInput3"),

    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
